ncol = 3, top = "BIC Stock Market Index Trends for 2016, 2020, 2024")
```
```{r}
plot_brazil_index <- grid.arrange(
p_brazil_2016, p_brazil_2020, p_brazil_2024,
ncol = 3, top = "Brazil Stock Market Index Trends")
plot_brazil_index <- grid.arrange(
p_brazil_2016, p_brazil_2020, p_brazil_2024,
ncol = 3, top = "Brazil Stock Market Index Trends")
```{r}
# Combine data into a single BRICS dataset
combined_data <- bind_rows(
brazil_index %>% mutate(country = "Brazil"),
india_index %>% mutate(country = "India"),
china_index %>% mutate(country = "China")
)
# Calculate average change rate for BRICS
calculate_brics_change_rate <- function(data, start_date, end_date) {
period_data <- data %>% filter(date >= as.Date(start_date) & date <= as.Date(end_date))
avg_close <- period_data %>% group_by(date) %>% summarise(avg_close = mean(close, na.rm = TRUE))
change_rate <- (last(avg_close$avg_close) - first(avg_close$avg_close)) / first(avg_close$avg_close) * 100
return(change_rate)
}
full_2016 <- calculate_brics_change_rate(combined_data, '2016-01-01', '2016-12-31')
elected_2020 <- calculate_brics_change_rate(combined_data, '2020-09-01', '2020-12-31')
full_2020 <- calculate_brics_change_rate(combined_data, '2020-01-01', '2020-12-31')
elected_2024 <- calculate_brics_change_rate(combined_data, '2024-09-01', '2024-11-20')
full_2024 <- calculate_brics_change_rate(combined_data, '2024-01-01', '2024-11-20')
# Create a data frame for visualization
rate_data <- data.frame(
Period = c("Elected Period", "Full Year", "Elected Period", "Full Year", "Elected Period", "Full Year"),
Year = c("2016", "2016", "2020", "2020", "2024", "2024"),
ChangeRate = c(elected_2016, full_2016, elected_2020, full_2020, elected_2024, full_2024)
)
# Plot the change rates
plot2 <- ggplot(rate_data, aes(x = Year, y = ChangeRate, fill = Period)) +
geom_bar(stat = "identity", position = "dodge", color = "black") +
scale_fill_manual(values = c("Black", "White")) +
theme_minimal() +
theme(plot.title = element_text(face = "bold")) +
labs(
title = "BIC Stock Market Change Rates",
x = "Year",
y = "Change Rate (%)",
fill = "Period"
)
# Display the plot
plot2
```
```{r}
library(dplyr)
library(lubridate)
library(readxl)
library(ggplot2)
file_1_path <- "2016_industry classification.xlsx"
file_2_path <- "2016_Post_Election.xlsx"
file_3_path <- "2016_Pre_Election.xlsx"
file_1_df <- read_excel(file_1_path, sheet = 'Sheet1')
getwd()
setwd("C:/Users/82107/OneDrive/바탕 화면/Final_project_Yeo_LEE/Data")
file_1_path <- "2016_industry classification.xlsx"
file_2_path <- "2016_Post_Election.xlsx"
file_3_path <- "2016_Pre_Election.xlsx"
getwd()
file_1_df <- read_excel(file_1_path, sheet = 'Sheet1')
file_2_df <- read_excel(file_2_path, sheet = 'Sheet1')
file_3_df <- read_excel(file_3_path, sheet = 'Sheet1')
# Add a period indicator to differentiate between pre-election and post-election data
file_2_df <- file_2_df %>% mutate(Period = 'Post_Election')
file_3_df <- file_3_df %>% mutate(Period = 'Pre_Election')
# Merge File 1 with File 2 and File 3 to include 업종명(Industry) in the combined dataframe
file_2_merged <- left_join(file_2_df, file_1_df %>% select(종목코드, 업종명), by = '종목코드')
file_3_merged <- left_join(file_3_df, file_1_df %>% select(종목코드, 업종명), by = '종목코드')
# Concatenate the merged dataframes
combined_df_with_industry <- bind_rows(file_2_merged, file_3_merged)  #
# Group by 업종명 (Industry) and Period, calculate the mean 등락률 (Change Rate)
grouped_change_rate_with_industry <- combined_df_with_industry %>%
group_by(업종명, Period) %>%
summarise(mean_change_rate = mean(등락률, na.rm = TRUE)) %>%
ungroup()
# Plot the results using ggplot2
ggplot(grouped_change_rate_with_industry, aes(x = 업종명, y = mean_change_rate, fill = factor(Period, levels = c('Pre_Election', 'Post_Election')))) +
geom_bar(stat = 'identity', position = position_dodge()) +
labs(title = "Impact of Trump's 2016 Election on South Korea's Major Industries",
x = 'Industry',
y = 'Average Change Rate (%)',
fill = 'Period') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Calculate the top 5 industries with the largest change between pre and post-election
top_5_industries <- grouped_change_rate_with_industry %>%
tidyr::spread(key = Period, value = mean_change_rate) %>%
mutate(change_diff = abs(Post_Election - Pre_Election)) %>%
arrange(desc(change_diff)) %>%
top_n(5, wt = change_diff) %>%
tidyr::gather(key = "Period", value = "mean_change_rate", Pre_Election, Post_Election)
# Plot the top 5 industries with the largest change
ggplot(top_5_industries, aes(x = 업종명, y = mean_change_rate, fill = factor(Period, levels = c('Pre_Election', 'Post_Election')))) +
geom_bar(stat = 'identity', position = position_dodge()) +
labs(title = "Top 5 Industries with Largest Change due to Trump's 2016 Election",
x = 'Industry',
y = 'Average Change Rate (%)',
fill = 'Period') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot the results using ggplot2
ggplot(grouped_change_rate_with_industry, aes(x = 업종명, y = mean_change_rate, fill = factor(Period, levels = c('Pre_Election', 'Post_Election')))) +
geom_bar(stat = 'identity', position = position_dodge()) +
labs(title = "Impact of Trump's 2016 Election on South Korea's Major Industries",
x = 'Industry',
y = 'Average Change Rate (%)',
fill = 'Period') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load the data from the Excel files for Biden 2020 analysis
biden_file_1_path <- "2020_Pre_Election.xlsx"
biden_file_2_path <- "2020_Post_Election.xlsx"
biden_file_3_path <- "2020_industry classification.xlsx"
# Read the data from the sheets
biden_file_1_df <- read_excel(biden_file_1_path, sheet = 'Sheet1')
biden_file_2_df <- read_excel(biden_file_2_path, sheet = 'Sheet1')
biden_file_3_df <- read_excel(biden_file_3_path, sheet = 'Sheet1')
# Add a period indicator to differentiate between pre-election and post-election data
biden_file_1_df <- biden_file_1_df %>% mutate(Period = 'Pre_Election')
biden_file_2_df <- biden_file_2_df %>% mutate(Period = 'Post_Election')
# Merge File 1 and File 2 with File 3 to include 업종명(Industry) in the combined dataframe
biden_file_1_merged <- left_join(biden_file_1_df, biden_file_3_df %>% select(종목코드, 업종명), by = '종목코드')
biden_file_2_merged <- left_join(biden_file_2_df, biden_file_3_df %>% select(종목코드, 업종명), by = '종목코드')
biden_file_2_merged <- left_join(biden_file_2_df, biden_file_3_df %>% select(종목코드, 업종명), by = '종목코드')
# Concatenate the merged dataframes
biden_combined_df_with_industry <- bind_rows(biden_file_1_merged, biden_file_2_merged)
# Group by 업종명 (Industry) and Period, calculate the mean 등락률 (Change Rate)
grouped_change_rate_with_industry_biden <- biden_combined_df_with_industry %>%
group_by(업종명, Period) %>%
summarise(mean_change_rate = mean(등락률, na.rm = TRUE)) %>%
ungroup()
# Plot the results using ggplot2
ggplot(grouped_change_rate_with_industry_biden, aes(x = 업종명, y = mean_change_rate, fill = factor(Period, levels = c('Pre_Election', 'Post_Election')))) +
geom_bar(stat = 'identity', position = position_dodge()) +
labs(title = "Impact of Biden's 2020 Election on South Korea's Major Industries",
x = 'Industry',
y = 'Average Change Rate (%)',
fill = 'Period') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Calculate the top 5 industries with the largest change between pre and post-election
top_5_industries_biden <- grouped_change_rate_with_industry_biden %>%
tidyr::spread(key = Period, value = mean_change_rate) %>%
mutate(change_diff = abs(Post_Election - Pre_Election)) %>%
arrange(desc(change_diff)) %>%
top_n(5, wt = change_diff) %>%
tidyr::gather(key = "Period", value = "mean_change_rate", Pre_Election, Post_Election)
# Plot the top 5 industries with the largest change
ggplot(top_5_industries_biden, aes(x = 업종명, y = mean_change_rate, fill = factor(Period, levels = c('Pre_Election', 'Post_Election')))) +
geom_bar(stat = 'identity', position = position_dodge()) +
labs(title = "Top 5 Industries with Largest Change due to Biden's 2020 Election",
x = 'Industry',
y = 'Average Change Rate (%)',
fill = 'Period') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load the data from the Excel files for Trump 2nd Term 2024 analysis
trump_file_1_path <- "2024_industry classification.xlsx"
trump_file_2_path <- "2024_Pre_Election.xlsx"
# Read the data from the sheets
trump_file_1_df <- read_excel(trump_file_1_path, sheet = 'Sheet1')
trump_file_2_df <- read_excel(trump_file_2_path, sheet = 'Sheet1')
# Add a period indicator to differentiate pre-election data
trump_file_2_df <- trump_file_2_df %>% mutate(Period = 'Pre_Election')
# Merge File 2 with File 1 to include 업종명(Industry) in the dataframe
trump_file_2_merged <- left_join(trump_file_2_df, trump_file_1_df %>% select(종목코드, 업종명), by = '종목코드')
# Group by 업종명(Industry), calculate the mean 등락률 (Change Rate)
grouped_change_rate_with_industry_trump <- trump_file_2_merged %>%
group_by(업종명, Period) %>%
summarise(mean_change_rate = mean(등락률, na.rm = TRUE)) %>%
ungroup()
# Plot the results using ggplot2
ggplot(grouped_change_rate_with_industry_trump, aes(x = 업종명, y = mean_change_rate, fill = Period)) +
geom_bar(stat = 'identity', position = position_dodge()) +
labs(title = "Impact of Trump's 2024 Election on South Korea's Major Industries",
x = 'Industry',
y = 'Average Change Rate (%)',
fill = 'Period') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Find the top 5 industries with the highest pre-election average rate
top_5_industries_trump <- grouped_change_rate_with_industry_trump %>%
arrange(desc(mean_change_rate)) %>%
top_n(5, wt = mean_change_rate)
# Plot the top 5 industries with the highest pre-election average rate
ggplot(top_5_industries_trump, aes(x = reorder(업종명, mean_change_rate), y = mean_change_rate, fill = Period)) +
geom_bar(stat = 'identity') +
coord_flip() +
labs(title = "Top 5 Industries with Highest Average Change Rate Before Trump's 2024 Election",
x = 'Industry',
y = 'Average Change Rate (%)',
fill = 'Period') +
theme_minimal()
library(dplyr)
library(lubridate)
library(readxl)
library(ggplot2)
file_1_path <- "2016_industry classification.xlsx"
file_2_path <- "2016_Post_Election.xlsx"
file_3_path <- "2016_Pre_Election.xlsx"
file_1_df <- read_excel(file_1_path, sheet = 'Sheet1')
setwd("C:/Users/82107/OneDrive/바탕 화면/Final_project_Yeo_LEE/Data")
file_1_path <- "2016_industry classification.xlsx"
file_2_path <- "2016_Post_Election.xlsx"
file_3_path <- "2016_Pre_Election.xlsx"
file_1_df <- read_excel(file_1_path, sheet = 'Sheet1')
setwd("C:/Users/82107/OneDrive/바탕 화면/Final_project_Yeo_LEE/Data")
getwd()
getwd()
setwd("C:/Users/82107/OneDrive/바탕 화면/Final_project_Yeo_LEE/Data")
file_1_path <- "2016_industry classification.xlsx"
file_2_path <- "2016_Post_Election.xlsx"
file_3_path <- "2016_Pre_Election.xlsx"
file_1_df <- read_excel(file_1_path, sheet = 'Sheet1')
knitr::opts_chunk$set(root.dir = "C:/Users/82107/OneDrive/바탕 화면/Final_project_Yeo_LEE/Data")
file_1_path <- "2016_industry classification.xlsx"
file_2_path <- "2016_Post_Election.xlsx"
file_3_path <- "2016_Pre_Election.xlsx"
file_1_df <- read_excel(file_1_path, sheet = 'Sheet1')
knitr::opts_chunk$set(root.dir = "C:/Users/82107/OneDrive/바탕 화면/Final_project_Yeo_LEE/Data")
library(dplyr)
library(lubridate)
library(readxl)
library(ggplot2)
file_1_path <- "2016_industry classification.xlsx"
file_2_path <- "2016_Post_Election.xlsx"
file_3_path <- "2016_Pre_Election.xlsx"
file_1_df <- read_excel(file_1_path, sheet = 'Sheet1')
file_1_path <- "2016_industry classification.xlsx"
file_1_df <- read_excel(file_1_path, sheet = 'Sheet1')
getwd()  # 현재 작업 디렉토리 확인
setwd("C:/Users/82107/OneDrive/바탕 화면/Final_project_Yeo_LEE/Data")  # 변경
library(dplyr)
library(lubridate)
library(readxl)
library(ggplot2)
getwd()  # 현재 작업 디렉토리 확인
setwd("C:/Users/82107/OneDrive/바탕 화면/Final_project_Yeo_LEE/Data")  # 변경
```{r setup, include=FALSE}
# knitr 설정
knitr::opts_chunk$set(
echo = TRUE,      # 코드 출력 여부
warning = FALSE,  # 경고 메시지 출력 여부
message = FALSE,  # 메시지 출력 여부
fig.width = 8,    # 그래프 기본 너비
fig.height = 6    # 그래프 기본 높이
)
# 작업 디렉토리 설정
knitr::opts_chunk$set(root.dir = "C:/Users/82107/OneDrive/바탕 화면/Final_project_Yeo_LEE/Data")
# knitr 설정
knitr::opts_chunk$set(
echo = TRUE,      # 코드 출력 여부
warning = FALSE,  # 경고 메시지 출력 여부
message = FALSE,  # 메시지 출력 여부
fig.width = 8,    # 그래프 기본 너비
fig.height = 6    # 그래프 기본 높이
)
# 작업 디렉토리 설정
knitr::opts_chunk$set(root.dir = "C:/Users/82107/OneDrive/바탕 화면/Final_project_Yeo_LEE/Data")
library(dplyr)
library(lubridate)
library(readxl)
library(ggplot2)
file_1_path <- "2016_industry classification.xlsx"
file_2_path <- "2016_Post_Election.xlsx"
file_3_path <- "2016_Pre_Election.xlsx"
file_1_df <- read_excel(file_1_path, sheet = 'Sheet1')
getwd()  # 현재 작업 디렉토리 확인
setwd("C:/Users/82107/OneDrive/바탕 화면/Final_project_Yeo_LEE/Data")  # 변경
file_1_path <- "2016_industry classification.xlsx"
file_1_df <- read_excel(file_1_path, sheet = 'Sheet1')
getwd()  # 현재 작업 디렉토리 확인
setwd("C:/Users/82107/OneDrive/바탕 화면/Final_project_Yeo_LEE/Data")
getwd()  # 현재 작업 디렉토리 확인
# knitr 설정
knitr::opts_chunk$set(
echo = TRUE,      # 코드 출력 여부
warning = FALSE,  # 경고 메시지 출력 여부
message = FALSE,  # 메시지 출력 여부
fig.width = 8,    # 그래프 기본 너비
fig.height = 6    # 그래프 기본 높이
)
# 작업 디렉토리 설정
knitr::opts_chunk$set(root.dir = "C:/Users/82107/OneDrive/바탕 화면/Final_project_Yeo_LEE/Data")
library(dplyr)
library(lubridate)
library(readxl)
library(ggplot2)
getwd()
library(dplyr)
library(lubridate)
library(readxl)
library(ggplot2)
file_1_path <- "2016_industry classification.xlsx"
file_1_df <- read_excel(file_1_path, sheet = 'Sheet1')
getwd()
library(tidyquant)
library(tidyquant)
library(ggplot2)
library(tidyverse)
# Get the economic data for euro
euro <- tq_get('DEXUSEU', get = 'economic.data', from = '2016-01-01', to = '2024-11-20')
# Get the economic data for euro
euro <- tq_get('DEXUSEU', get = 'economic.data', from = '2016-01-01', to = '2024-11-20')
# Remove rows with missing values
euro <- euro %>% drop_na()
# Ensure the date column is in Date format
euro <- euro %>% mutate(date = as.Date(date))
# Separate the data into individual periods
period_2016 <- euro %>% filter(date >= as.Date('2016-09-01') & date <= as.Date('2016-12-31'))
period_2020 <- euro %>% filter(date >= as.Date('2020-09-01') & date <= as.Date('2020-12-31'))
period_2024 <- euro %>% filter(date >= as.Date('2024-09-01') & date <= as.Date('2024-11-20'))
# Plot the data for each period
p1 <- ggplot(period_2016, aes(x = date, y = price)) +
geom_line() +
theme_tq() +
labs(title = "Trump1", x = "2016", y = "Exchange Rate")
p2 <- ggplot(period_2020, aes(x = date, y = price)) +
geom_line() +
theme_tq() +
labs(title = "Biden1", x = "2020", y = "Exchange Rate")
p3 <- ggplot(period_2024, aes(x = date, y = price)) +
geom_line() +
theme_tq() +
labs(title = "Trump2", x = "2024", y = "Exchange Rate")
# Display the plots in a grid
library(gridExtra)
plot1 <- grid.arrange(p1, p2, p3, ncol = 3, top = "Euro Exchange to U.S. Dollar Spot Trends")
library(dplyr)
library(lubridate)
library(readxl)
library(ggplot2)
file_1_path <- "2016_industry classification.xlsx"
file_2_path <- "2016_Post_Election.xlsx"
file_3_path <- "2016_Pre_Election.xlsx"
file_1_df <- read_excel(file_1_path, sheet = 'Sheet1')
file_2_df <- read_excel(file_2_path, sheet = 'Sheet1')
file_3_df <- read_excel(file_3_path, sheet = 'Sheet1')
# Add a period indicator to differentiate between pre-election and post-election data
file_2_df <- file_2_df %>% mutate(Period = 'Post_Election')
file_3_df <- file_3_df %>% mutate(Period = 'Pre_Election')
# Merge File 1 with File 2 and File 3 to include 업종명(Industry) in the combined dataframe
file_2_merged <- left_join(file_2_df, file_1_df %>% select(종목코드, 업종명), by = '종목코드')
file_3_merged <- left_join(file_3_df, file_1_df %>% select(종목코드, 업종명), by = '종목코드')
# Concatenate the merged dataframes
combined_df_with_industry <- bind_rows(file_2_merged, file_3_merged)  #
# Group by 업종명 (Industry) and Period, calculate the mean 등락률 (Change Rate)
grouped_change_rate_with_industry <- combined_df_with_industry %>%
group_by(업종명, Period) %>%
summarise(mean_change_rate = mean(등락률, na.rm = TRUE)) %>%
ungroup()
# Plot the results using ggplot2
ggplot(grouped_change_rate_with_industry, aes(x = 업종명, y = mean_change_rate, fill = factor(Period, levels = c('Pre_Election', 'Post_Election')))) +
geom_bar(stat = 'identity', position = position_dodge()) +
labs(title = "Impact of Trump's 2016 Election on South Korea's Major Industries",
x = 'Industry',
y = 'Average Change Rate (%)',
fill = 'Period') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot the results using ggplot2
ggplot(grouped_change_rate_with_industry, aes(x = 업종명, y = mean_change_rate, fill = factor(Period, levels = c('Pre_Election', 'Post_Election')))) +
geom_bar(stat = 'identity', position = position_dodge()) +
labs(title = "Impact of Trump's 2016 Election on South Korea's Major Industries",
x = 'Industry',
y = 'Average Change Rate (%)',
fill = 'Period') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Calculate the top 5 industries with the largest change between pre and post-election
top_5_industries <- grouped_change_rate_with_industry %>%
tidyr::spread(key = Period, value = mean_change_rate) %>%
mutate(change_diff = abs(Post_Election - Pre_Election)) %>%
arrange(desc(change_diff)) %>%
top_n(5, wt = change_diff) %>%
tidyr::gather(key = "Period", value = "mean_change_rate", Pre_Election, Post_Election)
# Plot the top 5 industries with the largest change
ggplot(top_5_industries, aes(x = 업종명, y = mean_change_rate, fill = factor(Period, levels = c('Pre_Election', 'Post_Election')))) +
geom_bar(stat = 'identity', position = position_dodge()) +
labs(title = "Top 5 Industries with Largest Change due to Trump's 2016 Election",
x = 'Industry',
y = 'Average Change Rate (%)',
fill = 'Period') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(lubridate)
library(readxl)
library(ggplot2)
file_1_path <- "2016_industry classification.xlsx"
file_2_path <- "2016_Post_Election.xlsx"
file_3_path <- "2016_Pre_Election.xlsx"
file_1_df <- read_excel(file_1_path, sheet = 'Sheet1')
file_2_df <- read_excel(file_2_path, sheet = 'Sheet1')
file_3_df <- read_excel(file_3_path, sheet = 'Sheet1')
# Add a period indicator to differentiate between pre-election and post-election data
file_2_df <- file_2_df %>% mutate(Period = 'Post_Election')
file_3_df <- file_3_df %>% mutate(Period = 'Pre_Election')
# Merge File 1 with File 2 and File 3 to include 업종명(Industry) in the combined dataframe
file_2_merged <- left_join(file_2_df, file_1_df %>% select(종목코드, 업종명), by = '종목코드')
file_3_merged <- left_join(file_3_df, file_1_df %>% select(종목코드, 업종명), by = '종목코드')
# Concatenate the merged dataframes
combined_df_with_industry <- bind_rows(file_2_merged, file_3_merged)  #
# Group by 업종명 (Industry) and Period, calculate the mean 등락률 (Change Rate)
grouped_change_rate_with_industry <- combined_df_with_industry %>%
group_by(업종명, Period) %>%
summarise(mean_change_rate = mean(등락률, na.rm = TRUE)) %>%
ungroup()
# Plot the results using ggplot2
ggplot(grouped_change_rate_with_industry, aes(x = 업종명, y = mean_change_rate, fill = factor(Period, levels = c('Pre_Election', 'Post_Election')))) +
geom_bar(stat = 'identity', position = position_dodge()) +
labs(title = "Impact of Trump's 2016 Election on South Korea's Major Industries",
x = 'Industry',
y = 'Average Change Rate (%)',
fill = 'Period') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(lubridate)
library(readxl)
library(ggplot2)
file_1_path <- "2016_industry classification.xlsx"
file_2_path <- "2016_Post_Election.xlsx"
file_3_path <- "2016_Pre_Election.xlsx"
file_1_df <- read_excel(file_1_path, sheet = 'Sheet1')
file_2_df <- read_excel(file_2_path, sheet = 'Sheet1')
file_3_df <- read_excel(file_3_path, sheet = 'Sheet1')
# Add a period indicator to differentiate between pre-election and post-election data
file_2_df <- file_2_df %>% mutate(Period = 'Post_Election')
file_3_df <- file_3_df %>% mutate(Period = 'Pre_Election')
# Merge File 1 with File 2 and File 3 to include 업종명(Industry) in the combined dataframe
file_2_merged <- left_join(file_2_df, file_1_df %>% select(종목코드, 업종명), by = '종목코드')
file_3_merged <- left_join(file_3_df, file_1_df %>% select(종목코드, 업종명), by = '종목코드')
# Concatenate the merged dataframes
combined_df_with_industry <- bind_rows(file_2_merged, file_3_merged)  #
# Group by 업종명 (Industry) and Period, calculate the mean 등락률 (Change Rate)
grouped_change_rate_with_industry <- combined_df_with_industry %>%
group_by(업종명, Period) %>%
summarise(mean_change_rate = mean(등락률, na.rm = TRUE)) %>%
ungroup()
# Plot the results using ggplot2
ggplot(grouped_change_rate_with_industry, aes(x = 업종명, y = mean_change_rate, fill = factor(Period, levels = c('Pre_Election', 'Post_Election')))) +
geom_bar(stat = 'identity', position = position_dodge()) +
labs(title = "Impact of Trump's 2016 Election on South Korea's Major Industries",
x = 'Industry',
y = 'Average Change Rate (%)',
fill = 'Period') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Calculate the top 5 industries with the largest change between pre and post-election
top_5_industries <- grouped_change_rate_with_industry %>%
tidyr::spread(key = Period, value = mean_change_rate) %>%
mutate(change_diff = abs(Post_Election - Pre_Election)) %>%
arrange(desc(change_diff)) %>%
top_n(5, wt = change_diff) %>%
tidyr::gather(key = "Period", value = "mean_change_rate", Pre_Election, Post_Election)
# Plot the top 5 industries with the largest change
ggplot(top_5_industries, aes(x = 업종명, y = mean_change_rate, fill = factor(Period, levels = c('Pre_Election', 'Post_Election')))) +
geom_bar(stat = 'identity', position = position_dodge()) +
labs(title = "Top 5 Industries with Largest Change due to Trump's 2016 Election",
x = 'Industry',
y = 'Average Change Rate (%)',
fill = 'Period') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot the top 5 industries with the largest change
ggplot(top_5_industries, aes(x = 업종명, y = mean_change_rate, fill = factor(Period, levels = c('Pre_Election', 'Post_Election')))) +
geom_bar(stat = 'identity', position = position_dodge()) +
labs(title = "Top 5 Industries with Largest Change due to Trump's 2016 Election",
x = 'Industry',
y = 'Average Change Rate (%)',
fill = 'Period') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
version
library(dplyr)
library(lubridate)
library(readxl)
library(ggplot2)
file_1_path <- "2016_industry classification.xlsx"
file_2_path <- "2016_Post_Election.xlsx"
file_3_path <- "2016_Pre_Election.xlsx"
file_1_df <- read_excel(file_1_path, sheet = 'Sheet1')
file_2_df <- read_excel(file_2_path, sheet = 'Sheet1')
file_3_df <- read_excel(file_3_path, sheet = 'Sheet1')
# Add a period indicator to differentiate between pre-election and post-election data
file_2_df <- file_2_df %>% mutate(Period = 'Post_Election')
file_3_df <- file_3_df %>% mutate(Period = 'Pre_Election')
# Merge File 1 with File 2 and File 3 to include 업종명(Industry) in the combined dataframe
file_2_merged <- left_join(file_2_df, file_1_df %>% select(종목코드, industry), by = '종목코드')
file_3_merged <- left_join(file_3_df, file_1_df %>% select(종목코드, industry), by = '종목코드')
# Concatenate the merged dataframes
combined_df_with_industry <- bind_rows(file_2_merged, file_3_merged)  #
# Group by 업종명 (Industry) and Period, calculate the mean 등락률 (Change Rate)
grouped_change_rate_with_industry <- combined_df_with_industry %>%
group_by(industry, Period) %>%
summarise(mean_change_rate = mean(등락률, na.rm = TRUE)) %>%
ungroup()
# Group by 업종명 (Industry) and Period, calculate the mean 등락률 (Change Rate)
grouped_change_rate_with_industry <- combined_df_with_industry %>%
group_by(industry, Period) %>%
summarise(mean_change_rate = mean(등락률, na.rm = TRUE).groups = "drop") %>%
# Group by 업종명 (Industry) and Period, calculate the mean 등락률 (Change Rate)
grouped_change_rate_with_industry <- combined_df_with_industry %>%
group_by(industry, Period) %>%
summarise(mean_change_rate = mean(등락률, na.rm = TRUE), .groups = "drop") %>%
ungroup()
